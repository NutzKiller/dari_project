name: Build Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: write  # Ensures the token can push tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Increment version using GitHub Actions run number
        id: increment_version
        run: |
          VERSION="v1.0.${{ github.run_number }}"
          echo "New version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Save version to the environment

      - name: Create and push new version tag
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin "refs/tags/v1.0.${{ github.run_number }}")
          if [ -z "$TAG_EXISTS" ]; then
            git tag v1.0.${{ github.run_number }}
            git push origin v1.0.${{ github.run_number }}
          else
            echo "Tag v1.0.${{ github.run_number }} already exists on remote. Skipping tag creation."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure the token is used for authentication

      # Bandit Security Check
      - name: Run Bandit Security Check
        uses: actions/setup-python@v4

      - name: Install and Run Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit
          # Run Bandit, but skip rule B104 to allow binding to 0.0.0.0
          bandit -r . --exclude tests --skip B104

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            nutzkiller/weather-app:latest 
            nutzkiller/weather-app:v1.0.${{ github.run_number }}
