name: Deploy Pipeline

on:
  workflow_run:
    workflows: ["Build Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run SSH command using EC2 private key from GitHub secrets
        run: |
          # Save the EC2 private key directly from GitHub secrets into the ssh-agent
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add the EC2 host to the known hosts to prevent SSH authenticity warning
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

          # Run the SSH command
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o PasswordAuthentication=no -o KbdInteractiveAuthentication=no -o ChallengeResponseAuthentication=no -o PubkeyAuthentication=yes ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            export PATH=\$PATH:/usr/sbin:/usr/bin:/sbin:/bin && \
            if [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then \
              sudo apt-get update && sudo apt-get install -y docker.io; \
            elif [ -f /etc/redhat-release ]; then \
              sudo yum update -y && sudo yum install -y docker; \
            elif [ -f /etc/system-release ] && grep -q 'Amazon Linux' /etc/system-release; then \
              sudo yum update -y && sudo yum install -y docker; \
            else \
              echo 'Unsupported OS'; exit 1; \
            fi && \
            sudo systemctl start docker && \
            sudo usermod -aG docker \$USER && newgrp docker && \
            docker --version && \
            EXISTING_CONTAINER=\$(sudo docker ps -q -f 'publish=5000'); \
            if [ -n \"\$EXISTING_CONTAINER\" ]; then \
              echo 'Stopping existing container using port 5000...'; \
              sudo docker stop \$EXISTING_CONTAINER; \
            fi && \
            docker pull nutzkiller/weather-app:v1.0.28 && \
            docker run -d -p 5000:5000 nutzkiller/weather-app:v1.0.28 && \
            docker ps"
          
          # Clean up the private key file
          rm -f ~/.ssh/id_rsa
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        shell: /usr/bin/bash -e {0}
