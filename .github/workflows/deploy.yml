name: Deploy Pipeline

on:
  workflow_run:
    workflows: ["Build Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read version from GitHub run number
        id: read_version
        run: |
          VERSION="v1.0.${{ github.run_number }}"  # Use the run number directly for version
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Set the version as an environment variable

      - name: Deploy to EC2
        run: |
          # Use the EC2 key directly from GitHub secrets
          echo "${{ secrets.EC2_KEY }}" > actions.pem
          chmod 600 actions.pem
          ssh -i actions.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            export PATH=\$PATH:/usr/sbin:/usr/bin:/sbin:/bin && \
            if [ -f /etc/debian_version ] || [ -f /etc/lsb-release ]; then \
              sudo apt-get update && sudo apt-get install -y docker.io; \
            elif [ -f /etc/redhat-release ]; then \
              sudo yum update -y && sudo yum install -y docker; \
            elif [ -f /etc/system-release ] && grep -q 'Amazon Linux' /etc/system-release; then \
              sudo yum update -y && sudo yum install -y docker; \
            else \
              echo 'Unsupported OS'; exit 1; \
            fi && \
            sudo systemctl start docker && \
            sudo usermod -aG docker \$USER && newgrp docker && \
            docker --version && \
            EXISTING_CONTAINER=\$(sudo docker ps -q -f "publish=5000"); \
            if [ -n "\$EXISTING_CONTAINER" ]; then \
              echo 'Stopping existing container using port 5000...'; \
              sudo docker stop \$EXISTING_CONTAINER; \
            fi && \
            docker pull nutzkiller/weather-app:v1.0.${{ github.run_number }} && \
            docker run -d -p 5000:5000 nutzkiller/weather-app:v1.0.${{ github.run_number }} && \
            docker ps"
          rm -f actions.pem  # Clean up the private key after use
          
      - name: Test Application Endpoint
        run: |
          sleep 10  # Wait for the application to start
          curl -v http://${{ secrets.EC2_HOST }}:5000 || exit 1
